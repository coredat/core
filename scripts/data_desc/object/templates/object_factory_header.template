#ifndef OBJECT_FACTORY_INCLUDED_{{guid}}
#define OBJECT_FACTORY_INCLUDED_{{guid}}


#include <core/common/core_fwd.hpp>
#include <stdint.h>


namespace Factory_entity {


/*!
  Generic Entity Factory method.
*/
Core::Entity
create(const uint32_t id, Core::World &world, Core::Transform *transform = nullptr);


constexpr bool
str_compare(char const *left, char const *right)
{
  return (*left && *right) ? (*left == *right && str_compare(left + 1, right + 1)) : (!*left && !*right);
}


constexpr uint32_t
get_id(const char *name)
{
  return

  % i = 1;
  % objects.each do |o|
  str_compare(name, \"{{o.data[:name]}}\") ? {{i}} :
  %   i += 1
  % end

  0;
}


} // ns


#endif // inc guard
